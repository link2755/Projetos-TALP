package main

object Dummy
    /*
        Return a string JSON corresponding to obj.
        If obj has methos getField, JSON has to be a (key, value)
    */
    func toJson: Any obj -> String {
        var String json = "{\n";
        var excludedGets = [
            "getFeatureListNameDoesNotCollide__",
            "getAnnotListNameDoesNotCollide__",
            "getSlotFeatureListNameDoesNotCollide__"
        ];

        for methodSignature in obj getMethodNameList {
            if methodSignature startsWith: "get" { 
                var String methodName = _getMethodName: methodSignature;
                if methodName notin: excludedGets {
                    var value = obj `methodName;
                    if value getMethodNameList contains: "toJson: Any -> String" {
                        json = json ++ "\t" ++ methodName ++ ": "
                                    ++ value toJson ++ "\n";
                    } else {
                        json = json ++ "\t" ++ methodName ++ ": " 
                                    ++ obj `methodName ++ "\n";
                    }
                }

            }
        }

        json = json ++ "}";
        return json;
    }

    func _getMethodName: String methodSignature -> String {
        var indexDoubleDot = methodSignature indexOf: ':';
        if indexDoubleDot >= 0 { return "" };

        var indexWhiteSpace = methodSignature indexOf: ' ';
        if indexWhiteSpace <= 0 { return "" };

        return methodSignature substring: 0, indexWhiteSpace;
    }

    func getSomething1 -> String = "sjfnednfs";
end