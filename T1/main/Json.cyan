package main

object Json

    var Int ident = 4;

    var validTypes = [ "Array<", "Boolean", "Byte", "Char", 
        "Double", "Float", "Int", "Long",
        "Short",
        
        "String",
        
        
        
    ];

    func setDefaultIdent: Int ident { self.ident = ident }
    func getDefaultIdent -> Int = self.ident;

    func toJson: Any obj -> String { 
        var String json = "{\n";

        var excludedGets = [
            "getFeatureListNameDoesNotCollide__",
            "getAnnotListNameDoesNotCollide__",
            "getSlotFeatureListNameDoesNotCollide__"
        ];

        for methodSignature in obj getMethodNameList {
            if methodSignature startsWith: "get" { 
                var String methodName = _getMethodName: methodSignature;
                if methodName notin: excludedGets {
                    var value = obj `methodName;
                    //if value getMethodNameList contains: "toJson: Any -> String" {
                    //    json = json ++ "    " ++ methodName ++ ": "
                    //                ++ value toJson ++ "\n";
                    //} else {
                    //    json = json ++ "    " ++ methodName ++ ": " 
                    //                ++ obj `methodName ++ "\n";
                    //}
                }

            }
        }

        json = json ++ "}";
        return json;
    }
    
    //func toJson: Any obj, ident: Int ident -> String { ... }

    func _getMethodName: String methodSignature -> String {
        var indexDoubleDot = methodSignature indexOf: ':';
        if indexDoubleDot >= 0 { return "" };

        var indexWhiteSpace = methodSignature indexOf: ' ';
        if indexWhiteSpace <= 0 { return "" };

        return methodSignature substring: 0, indexWhiteSpace;
    }
end